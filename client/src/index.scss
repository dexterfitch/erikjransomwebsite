@import "theme.scss";

/* PALETTE */
$primary: #9c0207ff;
$secondary: #e0b92eff;
$success: #54e39eff;
$info: #7e7f76ff;
$warning: #084787ff;
$danger: #610f42ff;
$light: #fff2ebff;
$light-80: #fff2ebcc;
$dark: #090901ff;

/* SPACING */
$spacer: 1rem;
$spacer-12: $spacer * .125;
$spacer-25: $spacer * .25;
$spacer-50: $spacer * .5;
$spacer-150: $spacer * 1.5;
$spacer-300: $spacer * 3;
$spacer-600: $spacer * 6;

// Zigzag border mixin credit: https://codepen.io/gilbarbara/pen/pvwmEb
@mixin jagged($color: 000, $size: 16, $location: bottom, $type: fill, $side: outside, $animate: false) {
  @if str-index(#{$color}, '#') {
    $color: str-slice(#{$color}, 2);
  }

  $width: $size;
  $height: calc($width / 2);
  $scale: calc($width / 16);
  $rotate: '0';
  $pseudo: if($location == top or $location == left, before, after);

  @if $side == inside {
    @if $location == bottom {
      $rotate: '180 8 4';
    } @else if $location == left {
      $height: $size;
      $rotate: '270 8 8';
      $width: calc($size / 2);
    } @else if $location == right {
      $height: $size;
      $rotate: '90 4 4';
      $width: calc($size / 2);
    }
  }
  @else {
    @if $location == top {
      $rotate: '180 8 4';
    } @else if $location == right {
      $rotate: '270 8 8';
      $height: $size;
      $width: $size / 2;
    } @else if $location == left {
      $rotate: '90 4 4';
      $height: $size;
      $width: $size / 2;
    }
  }
  $arrow: "data:image/svg+xml,%3Csvg%20width%3D%22#{$width}px%22%20height%3D%22#{$height}px%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpolygon%20points%3D%220%2C%200%208%2C%208%2016%2C0%22%20fill%3D%22%23#{$color}%22%20transform%3D%22scale%28#{$scale}%29%20rotate%28#{$rotate}%29%22%3E%3C%2Fpolygon%3E%3C%2Fsvg%3E";
  $wave: "data:image/svg+xml,%3Csvg%20width%3D%22#{$width}px%22%20height%3D%22#{$height}px%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20d%3D%22M8.00025863%2C0%20L0%2C6.59417725%20L0%2C8%20L8.00025885%2C1.40509033%20L16%2C8%20L16%2C6.59417725%20L8.00025863%2C0%20Z%22%20fill%3D%22%23#{$color}%22%20transform%3D%22scale%28#{$scale}%29%20rotate%28#{$rotate}%29%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E";
  position: relative;

  &:#{$pseudo} {
    background-repeat: if($location == bottom or $location == top, repeat-x, repeat-y);
    content: '';
    position: absolute;
    z-index: 10;

    @if $animate {
      animation-duration: $animate;
      animation-iteration-count: 1;
      animation-name: if($location == bottom or $location == top, slide-hoz, slide-vet);
    }

    @if $location == top {
      height: #{$height}px;
      left: 0;
      right: 0;

      @if $side == inside {
        top: 0;
      } @else {
        top: -#{$height}px;
      }
    }
    @else if $location == right {
      bottom: 0;
      top: 0;
      width: #{$width}px;

      @if $side == inside {
        right: 0;
      } @else {
        right: -#{$width}px;
      }
    }
    @else if $location == bottom {
      height: #{$height}px;
      left: 0;
      right: 0;

      @if $side == inside {
        bottom: 0;
      } @else {
        bottom: -#{$height}px;
      }
    }
    @else if $location == left {
      bottom: 0;
      top: 0;
      width: #{$width}px;

      @if $side == inside {
        left: 0;
      } @else {
        left: -#{$width}px;
      }
    }

    @if $location == top {
      @if $side == inside {
        background-image: url($arrow);
      } @else {
        @if $type == fill {
          background-image: url($arrow);
        } @else {
          background-image: url($wave);
        }
      }

    }
    @else {
      @if $side == inside {
        background-image: url($arrow);
      } @else {
        @if $type == fill {
          background-image: url($arrow);
        } @else {
          background-image: url($wave);
        }
      }
    }
  }

  @keyframes slide-hoz {
    from {
      width: 0;
    }

    to {
      width: 100%;
    }
  }

  @keyframes slide-vet {
    from {
      height: 0;
    }

    to {
      height: 100%;
    }
  }
}

/* BASE */
body {
  background-color: $dark;
  color: $light-80;
  font-family: 'TT Fors Trial', sans-serif;
}
#side-nav-container {
  @include jagged(090901, 50, right, fill, inside, 0s);
  background: $primary;
}
#side-nav-section {
  position: relative;
}
#side-nav-content {
  position: absolute;
  bottom: $spacer-150;
  font-family: 'PloniMLv2AAA-Light', sans-serif;
  text-transform: uppercase;
}
#side-nav-brand {
  position: absolute;
  top: $spacer-300;
  writing-mode: vertical-lr;
  text-orientation: mixed;
  transform: rotate(180deg);
  color: $light;
  letter-spacing: 1px;
  font-family: 'HandTIMES', sans-serif;
  font-style: italic;
  font-size: $spacer-600;
  margin: 0;
}

/* NAVIGATION */
.nav-link {
  color: $light;
  padding-bottom: $spacer-12;
  padding-left: $spacer-25;
  padding-right: $spacer-25;
  padding-top: $spacer-12;
  margin-top: $spacer-25;
  margin-bottom: $spacer-25;
}
.nav-link:hover, .nav-link:focus {
  color: $secondary;
}
.nav-link:focus-visible {
  color: $secondary;
  outline: none;
}
.nav-link.active {
  font-family: 'PloniMLv2AAA-U-Bold', sans-serif;
  color: $secondary;
}
.navbar-brand { 
  color: $primary;
}
.navbar-nav .nav-link.active {
  color: $secondary;
}

/* TYPOGRAPHY */
a {
  color: $secondary;
}

a:hover {
  color: $success;
}

.erik-work {
  color: $secondary;
}

.page-title {
  font-family: 'Glytern Personal Use Only', sans-serif;
  color: $secondary;
}

